[user]
	name = yonda
	email = honda@33i.co.jp
[core]
	excludesfile = ~/.gitignore
	pager = less
	editor = vim
[color]
	ui = auto
[push]
	default = tracking       # defaultのpush先はtrackingしているリポジトリ
[pull]
	rebase = true
[alias]
	# diff
	d  = diff
	dc = diff --cached
	ds = diff --stat
	di = difftool --extcmd icdiff
	dh = diff head^ head
	dd = diff develop head^

	# checkout
	co = checkout
	cod = checkout develop
	cb = checkout -b
	cob = checkout -b

	# commit
	ci = commit -v
	ca = commit --amend -v
	cm = commit -m

	# grep
	gl = grep --line-number --color

	# misc
	ad = add
	au = add -u
	ls = ls-files
	pl = pull
	rh = reset head^
	st = status
	ref = reflog

	# push
	pf = push -f
	pu = push
	pi = !git rev-parse --abbrev-ref HEAD | xargs git push --set-upstream origin
	pif = !git rev-parse --abbrev-ref HEAD | xargs git push -f --set-upstream origin

	# log
	lo = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)― %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
	lp = log -p -S

	# fetch
	f = fetch -p --tags

	# revert
	rem = revert -m 1

	# rebase
	r = rebase
	rd= rebase develop
	rc = rebase --continue
	ra = rebase --abort

	# stash
	ss = stash save
	sp = stash pop
	sl = stash list

	# mergeの際にconflictが起きたファイルを編集
	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"

	# branch
	b = branch
	bd = branch -D
	rbd = push --delete origin
	dmb = !git branch --merged | egrep -v '\\*|develop|master' | xargs git branch -d

	# hub
	# browse github page
	o = !hub browse
	# ファイルを指定して開く
	of = !hub browse -- tree/develop/$1
	# wiki ページを開く
	ow = browse -- wiki
	# 引数がなければ PR 画面、あれば引数で渡された PR 番号の画面を開く
	op = "![ $# -eq 0 ] && hub browse -- pulls || hub browse -- pull/$1"
	# 引数がなければ Issue 画面、あれば引数で渡された Issue 番号の画面を開く
	oi = "![ $# -eq 0 ] && hub browse -- issues || hub browse -- issue/$1"
	# 指定した番号の PR に checkout する
	cop = !"git remote -v | grep origin | grep push | cut -d':' -f2 | cut -d' ' -f1 | xargs -I % hub checkout 'https://github.com/'%'/pull/'$1"
	# カレントブランチの compare を開く
	com = !git rev-parse --abbrev-ref HEAD | xargs hub compare

	# PR を revert する
    prr = "!f () {\
		pr_num=${1};\
		commit= git log --pretty=format:'%h %s' | grep Merge | grep '#'${pr_num} | cut -d' ' -f1 | xargs git revert -m 1; \
		};f"
    prrc = "!f () {\
		pr_num=${1};\
		commit= git log --pretty=format:'%h %s' | grep Merge | grep '#'${pr_num}; \
		};f"

	# hubflow
	feature = hf feature
	hotfix = hf hotfix

	cl = clean
	cn = clean -n
	cf = clean -f

	# cherry-pick
	chp = cherry-pick

	# peco
	# 選択して checkout
	sco = !git branch | peco | xargs git checkout
	scr = "!git branch -r | grep -v HEAD | peco | cut -d'/' -f2- |xargs git checkout"
	# 選択して rebase
	srb = "!git branch | grep -v HEAD | peco | cut -d'/' -f2- |xargs git rebase"
	# 選択して branch delete
	sbd = "!git branch | grep -v '*' |peco | xargs git branch -D"

	# 選択して add
	sa = "!git status -s | peco | cut -d' ' -f3 | xargs git add"
	# 選択して diff を表示する
	sd = "!git status -s | grep 'M\\s' | peco | cut -d' ' -f3 | xargs git diff"

[ghq]
	root = ~/src
[include]
	path = ~/.gitconfig.private
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[difftool]
	prompt = false
[diff]
	tool = vimdiff
[merge]
	tool = vimdiff
[mergetool]
	prompt = false
